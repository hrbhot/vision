version: '3'
services:

  nginx:
    hostname: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "9001:80"
    networks:
      - npm_net
    depends_on:
      - flask
    volumes:
      - ./log/nginx/:/log:rw
      - ./sock:/sock
      - ./conf/nginx/conf.d:/etc/nginx/conf.d:ro
    restart: always
    command: |
      sh -c '
      /usr/sbin/nginx'

  flask:
    hostname: flask
    build:
      context: ./flask
      dockerfile: Dockerfile
    ports:
      - "50000:5000"
    networks:
      - npm_net
    depends_on:
      - mysql
    volumes:
      - ./log/flask:/log:rw
      - ./sock:/sock
      - ./wwwroot:/app:rw
    restart: always
    command: |
      sh -c '
      pip3 install -r /app/requirements.txt
      cp /app/uwsgi.ini /etc/uwsgi/uwsgi.ini
      cp /app/supervisord.conf /etc/supervisord.conf
      /usr/bin/supervisord'
      
  mysql:
    hostname: mysql
    image: mysql:5.7
    ports:
      - "33306:3306"
    networks:
      - npm_net
    volumes:
      - ./log/mysql/:/var/log/mysql/
      - ./mysql/:/var/lib/mysql/:rw
    environment:
      MYSQL_USER: "root"
      MYSQL_ROOT_PASSWORD: "root2018"
  mongodb:
          hostname: mongodb
          image: mongo:4.0.4
          ports:
            - "27777:27017"
          networks:
            - npm_net
          volumes:     
            - ./mongo:/data/db:rw
          command: mongod --smallfiles --logpath=/dev/null # --quiet
          environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_LOG_DIR=/dev/null
  node:
       hostname: nodejs
       build: ./nodejs
       ports:
         - "30000:3000"
       networks:
         - npm_net
       volumes:
         - ./nodejs:/nodejs:rw
         - ./log/nodejs/:/log:rw
networks:
  npm_net:

